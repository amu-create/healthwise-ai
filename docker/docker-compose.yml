version: '3.8'

services:
  db:
    image: postgres:15
    environment:
      POSTGRES_DB: healthwise
      POSTGRES_USER: ${DB_USER:-postgres}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-postgres}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ../backend
      dockerfile: Dockerfile
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - ../backend:/app
      - media_volume:/app/media
      - static_volume:/app/static
    ports:
      - "8000:8000"
    environment:
      - DEBUG=${DEBUG:-True}
      - DATABASE_URL=postgresql://${DB_USER:-postgres}:${DB_PASSWORD:-postgres}@db:5432/${DB_NAME:-healthwise}
      - REDIS_URL=redis://redis:6379/0
      - REDIS_HOST=redis
      - SECRET_KEY=${SECRET_KEY}
      - ALLOWED_HOSTS=${ALLOWED_HOSTS:-localhost,127.0.0.1,192.168.0.28}
      - DJANGO_SETTINGS_MODULE=healthwise.settings_docker
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    env_file:
      - ../.env

  frontend:
    build:
      context: ../frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - REACT_APP_API_URL=http://localhost:8000
      - REACT_APP_WEBSOCKET_URL=ws://localhost:8000
    depends_on:
      - backend
    env_file:
      - ../.env

volumes:
  postgres_data:
  media_volume:
  static_volume:

networks:
  default:
    driver: bridge
