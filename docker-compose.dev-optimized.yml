version: '3.8'

services:
  # PostgreSQL 데이터베이스 (최적화된 버전)
  db:
    image: postgres:14-alpine
    container_name: healthwise_db
    environment:
      POSTGRES_DB: healthwise_dev
      POSTGRES_USER: developer
      POSTGRES_PASSWORD: devpass123
      # 메모리 최적화
      POSTGRES_SHARED_BUFFERS: 256MB
      POSTGRES_EFFECTIVE_CACHE_SIZE: 1GB
      POSTGRES_MAINTENANCE_WORK_MEM: 64MB
      POSTGRES_CHECKPOINT_COMPLETION_TARGET: 0.9
      POSTGRES_WAL_BUFFERS: 16MB
      POSTGRES_RANDOM_PAGE_COST: 1.1
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U developer -d healthwise_dev"]
      interval: 10s
      timeout: 5s
      retries: 5
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M

  # Redis 캐시 및 채널 레이어 (최적화된 버전)
  redis:
    image: redis:7-alpine
    container_name: healthwise_redis
    command: redis-server --save 60 1 --loglevel warning --maxmemory 256mb --maxmemory-policy allkeys-lru
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    deploy:
      resources:
        limits:
          memory: 256M
        reservations:
          memory: 128M

  # Django 백엔드 (최적화된 버전)
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
      args:
        - BUILDKIT_INLINE_CACHE=1
    container_name: healthwise_backend
    command: >
      sh -c "
      python manage.py wait_for_db &&
      python manage.py migrate &&
      python manage.py runserver 0.0.0.0:8000
      "
    volumes:
      - ./backend:/app
      - media_volume:/app/media
      - static_volume:/app/staticfiles
      # pip 캐시 볼륨 추가
      - pip_cache:/root/.cache/pip
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      - DEBUG=True
      - DATABASE_URL=postgresql://developer:devpass123@db:5432/healthwise_dev
      - REDIS_URL=redis://redis:6379/1
      - PYTHONUNBUFFERED=1
      - DJANGO_SETTINGS_MODULE=healthwise.settings
    env_file:
      - ./backend/.env
    stdin_open: true
    tty: true
    deploy:
      resources:
        limits:
          memory: 1G
        reservations:
          memory: 512M

  # React 프론트엔드 (최적화된 버전)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
      args:
        - BUILDKIT_INLINE_CACHE=1
    container_name: healthwise_frontend
    volumes:
      - ./frontend:/app
      # node_modules를 제외하고 마운트
      - /app/node_modules
      # npm 캐시 볼륨 추가
      - npm_cache:/root/.npm
    ports:
      - "3000:3000"
    environment:
      - REACT_APP_API_URL=http://localhost:8000/api
      - CHOKIDAR_USEPOLLING=true
      - WDS_SOCKET_PORT=3000
      - NODE_OPTIONS=--max-old-space-size=2048
    env_file:
      - ./frontend/.env
    depends_on:
      - backend
    stdin_open: true
    tty: true
    deploy:
      resources:
        limits:
          memory: 2G
        reservations:
          memory: 1G

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  static_volume:
    driver: local
  media_volume:
    driver: local
  pip_cache:
    driver: local
  npm_cache:
    driver: local

# 네트워크 설정
networks:
  default:
    driver: bridge
    driver_opts:
      com.docker.network.bridge.name: healthwise_bridge
