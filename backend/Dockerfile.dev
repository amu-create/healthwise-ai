# 멀티스테이지 빌드로 이미지 크기 최소화
FROM python:3.11-slim-bullseye as builder

# 빌드 의존성 설치
RUN apt-get update && apt-get install -y \
    gcc \
    libpq-dev \
    && rm -rf /var/lib/apt/lists/*

# pip 업그레이드 및 캐시 활용
RUN pip install --upgrade pip

# requirements 복사 및 의존성 설치
COPY requirements.txt /tmp/
RUN pip wheel --no-cache-dir --no-deps --wheel-dir /tmp/wheels -r /tmp/requirements.txt

# 실행 스테이지
FROM python:3.11-slim-bullseye

# 런타임 의존성 설치 (MediaPipe용 라이브러리 포함)
RUN apt-get update && apt-get install -y \
    libpq5 \
    netcat \
    dos2unix \
    libglib2.0-0 \
    libsm6 \
    libxext6 \
    libxrender-dev \
    libgomp1 \
    libgcc-s1 \
    && rm -rf /var/lib/apt/lists/*

# wheels 복사 및 설치
COPY --from=builder /tmp/wheels /tmp/wheels
COPY requirements.txt /tmp/
RUN pip install --no-cache /tmp/wheels/*

# 작업 디렉토리 설정
WORKDIR /app

# entrypoint 스크립트 복사 및 변환
COPY docker-entrypoint.sh /docker-entrypoint.sh
RUN dos2unix /docker-entrypoint.sh && chmod +x /docker-entrypoint.sh

# 애플리케이션 코드 복사
COPY . /app/

# 로그 파일을 위한 디렉토리 생성
RUN mkdir -p /app/logs && chmod 777 /app/logs

# 환경변수 설정
ENV PYTHONUNBUFFERED=1 \
    PYTHONDONTWRITEBYTECODE=1 \
    PATH="/usr/local/bin:$PATH"

ENTRYPOINT ["/docker-entrypoint.sh"]
CMD ["python", "manage.py", "runserver", "0.0.0.0:8000"]
