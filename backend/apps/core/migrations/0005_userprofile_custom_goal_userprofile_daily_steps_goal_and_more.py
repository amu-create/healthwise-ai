# Generated by Django 5.2 on 2025-06-10 00:55

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0004_chatsession_user_session_number'),
    ]

    operations = [
        migrations.AddField(
            model_name='userprofile',
            name='custom_goal',
            field=models.TextField(blank=True, help_text='사용자 정의 목표'),
        ),
        migrations.AddField(
            model_name='userprofile',
            name='daily_steps_goal',
            field=models.IntegerField(default=10000, help_text='일일 목표 걸음 수'),
        ),
        migrations.AddField(
            model_name='userprofile',
            name='distance_unit',
            field=models.CharField(choices=[('km', 'km'), ('miles', 'miles')], default='km', max_length=5),
        ),
        migrations.AddField(
            model_name='userprofile',
            name='goal',
            field=models.CharField(choices=[('weight_loss', '체중 감량'), ('muscle_gain', '근육 증가'), ('health_improvement', '건강 개선'), ('endurance', '지구력 향상'), ('flexibility', '유연성 향상'), ('stress_relief', '스트레스 해소'), ('custom', '사용자 정의')], default='health_improvement', max_length=20),
        ),
        migrations.AddField(
            model_name='userprofile',
            name='monthly_calories_goal',
            field=models.IntegerField(default=8000, help_text='월간 목표 칼로리 소모량'),
        ),
        migrations.AddField(
            model_name='userprofile',
            name='monthly_distance_goal',
            field=models.FloatField(default=50.0, help_text='월간 목표 거리 (km 또는 miles)'),
        ),
        migrations.AddField(
            model_name='userprofile',
            name='weekly_workout_goal',
            field=models.IntegerField(default=3, help_text='주간 운동 목표 횟수'),
        ),
        migrations.AddField(
            model_name='userprofile',
            name='weight_unit',
            field=models.CharField(choices=[('kg', 'kg'), ('lbs', 'lbs')], default='kg', max_length=5),
        ),
        migrations.AddField(
            model_name='userprofile',
            name='workout_days_per_week',
            field=models.IntegerField(default=3, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(7)]),
        ),
        migrations.AddField(
            model_name='workoutlog',
            name='avg_heart_rate',
            field=models.IntegerField(blank=True, help_text='평균 심박수', null=True),
        ),
        migrations.AddField(
            model_name='workoutlog',
            name='distance',
            field=models.FloatField(blank=True, help_text='이동 거리 (km)', null=True),
        ),
        migrations.AddField(
            model_name='workoutlog',
            name='end_latitude',
            field=models.FloatField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='workoutlog',
            name='end_longitude',
            field=models.FloatField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='workoutlog',
            name='max_heart_rate',
            field=models.IntegerField(blank=True, help_text='최대 심박수', null=True),
        ),
        migrations.AddField(
            model_name='workoutlog',
            name='route_coordinates',
            field=models.JSONField(default=list, help_text='경로 좌표 목록'),
        ),
        migrations.AddField(
            model_name='workoutlog',
            name='start_latitude',
            field=models.FloatField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='workoutlog',
            name='start_longitude',
            field=models.FloatField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='workoutlog',
            name='steps',
            field=models.IntegerField(blank=True, help_text='걸음 수', null=True),
        ),
        migrations.AddField(
            model_name='workoutlog',
            name='workout_type',
            field=models.CharField(choices=[('running', '러닝'), ('cycling', '자전거'), ('swimming', '수영'), ('gym', '헬스장'), ('yoga', '요가'), ('pilates', '필라테스'), ('hiking', '등산'), ('sports', '스포츠'), ('home', '홈트레이닝'), ('other', '기타')], default='other', max_length=20),
        ),
        migrations.CreateModel(
            name='MusicPreference',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('preferred_genres', models.JSONField(default=list, help_text='선호 장르 목록')),
                ('preferred_artists', models.JSONField(default=list, help_text='선호 아티스트 목록')),
                ('disliked_genres', models.JSONField(default=list, help_text='비선호 장르 목록')),
                ('workout_music_preferences', models.JSONField(default=dict, help_text='운동 종류별 음악 선호도')),
                ('preferred_bpm_min', models.IntegerField(default=100, help_text='선호 BPM 최소값')),
                ('preferred_bpm_max', models.IntegerField(default=180, help_text='선호 BPM 최대값')),
                ('mood_preferences', models.JSONField(default=dict, help_text='기분별 음악 선호도')),
                ('feedback_history', models.JSONField(default=list, help_text='피드백 기록')),
                ('recommendation_accuracy', models.FloatField(default=0.0, help_text='추천 정확도')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='music_preferences', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': '음악 선호도',
                'verbose_name_plural': '음악 선호도들',
                'db_table': 'music_preferences',
            },
        ),
        migrations.CreateModel(
            name='WorkoutMusic',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('artist', models.CharField(max_length=100)),
                ('youtube_id', models.CharField(blank=True, max_length=50)),
                ('spotify_id', models.CharField(blank=True, max_length=50)),
                ('played_at', models.DateTimeField(auto_now_add=True)),
                ('play_duration', models.IntegerField(help_text='재생 시간 (초)')),
                ('skip_count', models.IntegerField(default=0, help_text='건너뛰기 횟수')),
                ('user_feedback', models.CharField(blank=True, choices=[('liked', '좋음'), ('disliked', '싫음'), ('neutral', '보통')], max_length=10, null=True)),
                ('feedback_note', models.TextField(blank=True)),
                ('was_ai_recommended', models.BooleanField(default=False)),
                ('recommendation_reason', models.TextField(blank=True)),
                ('recommendation_keywords', models.JSONField(default=list, help_text='AI 추천 키워드')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='workout_music', to=settings.AUTH_USER_MODEL)),
                ('workout_log', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='played_music', to='core.workoutlog')),
            ],
            options={
                'verbose_name': '운동 중 재생 음악',
                'verbose_name_plural': '운동 중 재생 음악들',
                'db_table': 'workout_music',
                'ordering': ['-played_at'],
            },
        ),
    ]
