# Generated by Django 5.2.1 on 2025-06-18 09:34

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('api', '0006_notification_userprofile_workoutpost_postcomment_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='SocialPost',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField()),
                ('visibility', models.CharField(choices=[('public', '전체 공개'), ('followers', '팔로워만'), ('private', '나만 보기')], default='public', max_length=20)),
                ('exercise_name', models.CharField(blank=True, max_length=100)),
                ('duration', models.IntegerField(blank=True, help_text='운동 시간(분)', null=True)),
                ('calories_burned', models.IntegerField(blank=True, null=True)),
                ('media_file', models.FileField(blank=True, null=True, upload_to='social/posts/%Y/%m/')),
                ('media_type', models.CharField(blank=True, choices=[('image', '이미지'), ('video', '동영상'), ('gif', 'GIF')], max_length=10, null=True)),
                ('media_url', models.URLField(blank=True, help_text='외부 미디어 URL (YouTube, GIF 등)', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('likes', models.ManyToManyField(blank=True, related_name='social_liked_posts', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='social_posts', to=settings.AUTH_USER_MODEL)),
                ('workout_log', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.workoutroutinelog')),
            ],
            options={
                'db_table': 'social_workout_post',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='SocialNotification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('like', '좋아요'), ('comment', '댓글'), ('follow', '팔로우'), ('friend_request', '친구 요청'), ('achievement', '업적 달성'), ('workout_reminder', '운동 알림')], max_length=20)),
                ('title', models.CharField(max_length=255)),
                ('message', models.TextField()),
                ('is_read', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('from_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='social_sent_notifications', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='social_notifications', to=settings.AUTH_USER_MODEL)),
                ('post', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='social.socialpost')),
            ],
            options={
                'db_table': 'social_notification',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='SocialComment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='replies', to='social.socialcomment')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='social_comments', to=settings.AUTH_USER_MODEL)),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='social.socialpost')),
            ],
            options={
                'db_table': 'social_comment',
                'ordering': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='SocialProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bio', models.TextField(blank=True, null=True)),
                ('profile_picture', models.ImageField(blank=True, null=True, upload_to='profiles/')),
                ('is_private', models.BooleanField(default=False)),
                ('show_achievement_badges', models.BooleanField(default=True)),
                ('show_workout_stats', models.BooleanField(default=True)),
                ('total_posts', models.IntegerField(default=0)),
                ('total_workouts', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('followers', models.ManyToManyField(blank=True, related_name='social_following', to=settings.AUTH_USER_MODEL)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='social_profile_obj', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'social_user_profile',
            },
        ),
        migrations.CreateModel(
            name='SocialFriendRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('pending', '대기중'), ('accepted', '수락됨'), ('rejected', '거절됨')], default='pending', max_length=20)),
                ('message', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('responded_at', models.DateTimeField(blank=True, null=True)),
                ('from_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='social_sent_friend_requests', to=settings.AUTH_USER_MODEL)),
                ('to_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='social_received_friend_requests', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'social_friend_request',
                'unique_together': {('from_user', 'to_user')},
            },
        ),
    ]
